// <auto-generated />
using BookBorrowingDataLayer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(BookBorrowingDbContext))]
    partial class BookBorrowingDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookBorrowingSharedLayer.Models.BookModel", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookId"));

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Currently_Borrowed_By_User_id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Is_Book_Available")
                        .HasColumnType("bit");

                    b.Property<int>("Lent_By_User_id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Rating")
                        .HasColumnType("real");

                    b.HasKey("BookId");

                    b.ToTable("Book");
                });

            modelBuilder.Entity("BookBorrowingSharedLayer.Models.UserModel", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tokens_Available")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Name = "Akansha",
                            Password = "akansha1@111",
                            Tokens_Available = 3,
                            Username = "akansha1@gmail.com"
                        },
                        new
                        {
                            UserId = 2,
                            Name = "Shubhi",
                            Password = "shubhi1@111",
                            Tokens_Available = 3,
                            Username = "shubhi1@gmail.com"
                        },
                        new
                        {
                            UserId = 3,
                            Name = "Rashi",
                            Password = "rashi1@111",
                            Tokens_Available = 3,
                            Username = "rashi1@gmail.com"
                        },
                        new
                        {
                            UserId = 4,
                            Name = "Ashi",
                            Password = "ashi1@111",
                            Tokens_Available = 3,
                            Username = "ashi1@gmail.com"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
