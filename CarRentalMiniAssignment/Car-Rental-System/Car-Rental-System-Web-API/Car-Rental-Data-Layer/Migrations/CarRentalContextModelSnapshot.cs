// <auto-generated />
using System;
using Car_Rental_Data_Layer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Car_Rental_Data_Layer.Migrations
{
    [DbContext(typeof(CarRentalContext))]
    partial class CarRentalContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Car_Rental_Data_Layer.Entities.CarEntity", b =>
                {
                    b.Property<int>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleId"), 1L, 1);

                    b.Property<bool>("AvailabilityStatus")
                        .HasColumnType("bit");

                    b.Property<string>("Maker")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("RentalPrice")
                        .HasColumnType("bigint");

                    b.HasKey("VehicleId");

                    b.ToTable("Car");

                    b.HasData(
                        new
                        {
                            VehicleId = 1,
                            AvailabilityStatus = true,
                            Maker = "Hyundai",
                            Model = "I-20",
                            RentalPrice = 2000L
                        },
                        new
                        {
                            VehicleId = 2,
                            AvailabilityStatus = true,
                            Maker = "Hyundai",
                            Model = "Verna",
                            RentalPrice = 3000L
                        },
                        new
                        {
                            VehicleId = 3,
                            AvailabilityStatus = true,
                            Maker = "Maruti Suzuki",
                            Model = "Dezire",
                            RentalPrice = 2000L
                        },
                        new
                        {
                            VehicleId = 4,
                            AvailabilityStatus = true,
                            Maker = "Tata",
                            Model = "Nexon",
                            RentalPrice = 4000L
                        },
                        new
                        {
                            VehicleId = 5,
                            AvailabilityStatus = true,
                            Maker = "Tata",
                            Model = "Altroz",
                            RentalPrice = 2000L
                        });
                });

            modelBuilder.Entity("Car_Rental_Data_Layer.Entities.RentalAgreementEntity", b =>
                {
                    b.Property<int>("AgreementID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AgreementID"), 1L, 1);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Maker")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RentalDuration")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.Property<bool>("isReturnRequired")
                        .HasColumnType("bit");

                    b.HasKey("AgreementID");

                    b.ToTable("Agreement");
                });

            modelBuilder.Entity("Car_Rental_Data_Layer.Entities.UserEntity", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Phone")
                        .HasColumnType("bigint");

                    b.Property<bool>("isAdmin")
                        .HasColumnType("bit");

                    b.HasKey("UserId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "admin1@gmail.com",
                            Name = "Admin1",
                            Password = "admin1@111",
                            Phone = 2345678909L,
                            isAdmin = true
                        },
                        new
                        {
                            UserId = 2,
                            Email = "admin2@gmail.com",
                            Name = "Admin2",
                            Password = "admin2@222",
                            Phone = 1234567896L,
                            isAdmin = true
                        },
                        new
                        {
                            UserId = 3,
                            Email = "akansha@gmail.com",
                            Name = "Akansha",
                            Password = "akansha@3198",
                            Phone = 1234567896L,
                            isAdmin = false
                        },
                        new
                        {
                            UserId = 4,
                            Email = "shubhi@gmail.com",
                            Name = "Shubhi",
                            Password = "shubhi@0868",
                            Phone = 1234567896L,
                            isAdmin = false
                        },
                        new
                        {
                            UserId = 5,
                            Email = "abha@gmail.com",
                            Name = "Abha",
                            Password = "abha@0868",
                            Phone = 1234567896L,
                            isAdmin = false
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
